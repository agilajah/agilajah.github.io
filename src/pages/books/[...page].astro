---
import type { Page, GetStaticPathsOptions } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import PageLayout from "@/layouts/BaseBookShelf";
import BookPreview from "@/components/books/BookPreview";
import Pagination from "@/components/Paginator";
import { getUniqueTags, sortMDByDate } from "@/utils";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	const allBooks = await getCollection("book");
	const allBookssByDate = sortMDByDate(allBooks);
	const uniqueTags = getUniqueTags(allBooks);
	return paginate(allBookssByDate, { props: { uniqueTags }, pageSize: 200 });
}

interface Props {
	page: Page<CollectionEntry<"book">>;
	uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
	title: "Bookshelf",
	description: "A collection of books that I own and read",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			url: page.url.prev,
			text: `← Previous Shelf`,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			url: page.url.next,
			text: `Next Shelf →`,
		},
	}),
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6">Books ({page.data.length})</h1>
	{
		uniqueTags.length && (
			<aside>
				<h2 class="mb-4 flex items-center text-lg font-semibold">
					<svg
						aria-hidden="true"
						xmlns="http://www.w3.org/2000/svg"
						class="h-6 w-6"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						fill="none"
						stroke-linecap="round"
						stroke-linejoin="round"
					>
						<path stroke="none" d="M0 0h24v24H0z" fill="none" />
						<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
						<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
						<path d="M6 9h-.01" />
					</svg>
					Categories
				</h2>
				<ul class="text-bgColor flex flex-wrap gap-2">
					{uniqueTags.map((tag) => (
						<li>
							<a
								class="bg-accent flex items-center justify-center rounded-lg p-1"
								href={`/book-tags/${tag}`}
								aria-label={`View all books with the tag: ${tag}`}
							>
								{tag}
							</a>
						</li>
					))}
				</ul>
				<span class="mt-4 block sm:text-right">
					<a class="sm:hover:text-accent" href="/book-tags" aria-label="View all book categories">
						View all →
					</a>
				</span>
			</aside>
		)
	}
	<div class="container mx-auto">
		<section aria-label="Book post list">
			<ul class="mt-24 grid space-y-8 text-left sm:grid-cols-3 sm:gap-y-8 sm:gap-x-8">
				{
					page.data.map((p) => (
						<li class="flex flex-wrap items-center gap-x-2 space-y-2 [&_q]:w-full">
							<BookPreview book={p} as="h2" withDesc />
						</li>
					))
				}
			</ul>
			<Pagination {...paginationProps} />
		</section>
	</div>
</PageLayout>
