---
import type { CollectionEntry } from "astro:content";
import type { IElement } from "@/data/shared";
import { getFormattedDate } from "@/utils";

interface Props extends IElement {
	book: CollectionEntry<"book">;
	withDesc?: boolean;
}

const { book , as: Element = "div", withDesc = false } = Astro.props;
const date = new Date(book.data.publishDate);
const datetime = date.toISOString();
const bookDate = getFormattedDate(date, { month: "short" });
---
<!-- <time datetime={datetime} class="min-w-[120px] text-gray-500">{bookDate}</time> -->
<Element class="relative overflow-hidden rounded-xl group w-64 h-64 bg-gray-100">
		<div class="flex justify-center mx-auto">
			<img class="absolute rounded-md w-7/12 h-7/12 drop-shadow-md transform duration-300 inset-y-1 group-hover:-inset-y-full mt-8" alt={book.data.title} src={`/assets/books/${book.data.cover}`}>
		</div>
		<div class="absolute w-full h-full shadow-2xl opacity-20 transform duration-300 inset-y-full group-hover:-inset-y-0 mt-10"></div>
		
		<div class="absolute w-full h-full transform duration-300 inset-y-full group-hover:-inset-y-0 ml-3 mr-3">
			<a href={`/books/${book.slug}`} class="capitalize font-serif font-bold text-lg mt-5 text-gray-500">{book.data.title}</a>
			{withDesc && <q class="mt-2 block italic line-clamp-3">{book.data.description}</q>}
		</div>
</Element>

