---
import type { CollectionEntry } from "astro:content";
import type { IElement } from "@/data/shared";
import { getFormattedDate } from "@/utils";

interface Props extends IElement {
	book: CollectionEntry<"book">;
	withDesc?: boolean;
}

const { book, as: Element = "div", withDesc = false } = Astro.props;
const date = new Date(book.data.publishDate);
const datetime = date.toISOString();
const bookDate = getFormattedDate(date, { month: "short" });
---

<!-- <time datetime={datetime} class="min-w-[120px] text-gray-500">{bookDate}</time> -->
<Element class="relative overflow-hidden rounded-xl group w-64 h-64 bg-gray-100">
	<div class="mx-auto flex justify-center">
		<img
			class="h-7/12 absolute inset-y-1 mt-8 w-7/12 transform rounded-md drop-shadow-md duration-300 group-hover:-inset-y-full"
			alt={book.data.title}
			src={`/assets/books/${book.data.cover}`}
		/>
	</div>
	<div
		class="absolute inset-y-full mt-10 h-full w-full transform opacity-20 shadow-2xl duration-300 group-hover:-inset-y-0"
	>
	</div>

	<div
		class="absolute inset-y-full ml-5 mr-5 mt-5 h-full transform duration-300 group-hover:-inset-y-0"
	>
		<a href={`/books/${book.slug}`} class="mt-5 font-serif text-lg font-bold text-gray-500"
			>{book.data.title}</a
		>
		{withDesc && <q class="line-clamp-3 mt-2 block italic">{book.data.description}</q>}
	</div>
</Element>
